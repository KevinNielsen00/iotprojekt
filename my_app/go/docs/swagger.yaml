basePath: /api
definitions:
  main.Customer:
    properties:
      customer_nr:
        type: integer
      firm:
        type: string
      location:
        type: string
      mail:
        type: string
      phone_nr:
        type: string
    type: object
  main.ErrorResponse:
    properties:
      error:
        type: string
      message:
        type: string
    type: object
  main.Product:
    properties:
      barrel_type:
        type: string
      customer_nr:
        type: integer
      height:
        type: number
      meter_id:
        type: integer
      oil_type:
        type: string
      product_id:
        type: integer
      product_nr:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a sample API for managing customers and products.
  title: My API
  version: "1.0"
paths:
  /customers:
    get:
      description: Get a list of all customers
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.Customer'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: Get all customers
      tags:
      - customers
    post:
      consumes:
      - application/json
      description: Add a new customer to the database
      parameters:
      - description: Customer data
        in: body
        name: customer
        required: true
        schema:
          $ref: '#/definitions/main.Customer'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: Create a new customer
      tags:
      - customers
  /products:
    get:
      description: Get a list of all products
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.Product'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: Get all products
      tags:
      - products
    post:
      consumes:
      - application/json
      description: Add a new product to the database
      parameters:
      - description: Product data
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/main.Product'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: Create a new product
      tags:
      - products
swagger: "2.0"
